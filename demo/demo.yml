# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l

  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /Users/milescollier/git/personal/lambda-cost-analyzer

  # Export additional ENV variables
  env:
    recording: true

  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 138

  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 25

  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0

  # Quality
  # 1 - 100
  quality: 100

  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto

  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 8000

  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Terminalizer
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px

  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9

  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block

  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"

  # The size of the font
  fontSize: 12

  # The height of lines
  lineHeight: 1

  # The spacing between letters
  letterSpacing: 0

  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"

# Records, feel free to edit them
records:
  - delay: 100
    content: "node index.js --function helloworld \\\r\n> --requests 500000 \\\r\n> --warmups 3 \\\r\n> --tests 2 \\\r\n> --suite lowest\r\n"
  - delay: 601
    content: "\r\n"
  - delay: 265
    content: "\e[33mFunction Loaded:\e[39m helloworld\r\n\e[33mCurrent Configuruation:\e[39m\r\n┌─────────┬────────────────────────┐\r\n│ (index) │         Values         │\r\n├─────────┼────────────────────────┤\r\n│  Name   │ \e[32m     'helloworld'\e[39m      │\r\n│ Runtime │      \e[32m'nodejs10.x'\e[39m      │\r\n│ Timeout │          \e[32m'6s'\e[39m          │\r\n│ Memory  │        \e[32m'384 MB'\e[39m        │\r\n└─────────┴────────────────────────┘\r\n\r\n------------------------------------------------\r\n\r\n"
  - delay: 279
    content: "\U0001F40F  Updated RAM to 128 MB\r\n\r\n\U0001F525 Running warmup tests for accurate non-cold start readings!\r\n"
  - delay: 1167
    content: "\e[32mLambda Success!\e[39m Completed in 621.15ms, billed for 700ms @ 128 MB\r\n"
  - delay: 338
    content: "\e[32mLambda Success!\e[39m Completed in 62.37ms, billed for 100ms @ 128 MB\r\n"
  - delay: 367
    content: "\e[32mLambda Success!\e[39m Completed in 70.51ms, billed for 100ms @ 128 MB\r\n\r\n\r\n\U0001F3CE️   Performance Test Started!\r\n"
  - delay: 337
    content: "\e[32mLambda Success!\e[39m Completed in 125.66ms, billed for 200ms @ 128 MB\r\n"
  - delay: 357
    content: "\e[32mLambda Success!\e[39m Completed in 77.25ms, billed for 100ms @ 128 MB\r\n\r\n------------------------------------------------\r\n\r\n"
  - delay: 377
    content: "\U0001F40F  Updated RAM to 256 MB\r\n\r\n\U0001F525 Running warmup tests for accurate non-cold start readings!\r\n"
  - delay: 1016
    content: "\e[32mLambda Success!\e[39m Completed in 320.80ms, billed for 400ms @ 256 MB\r\n"
  - delay: 359
    content: "\e[32mLambda Success!\e[39m Completed in 32.75ms, billed for 100ms @ 256 MB\r\n"
  - delay: 251
    content: "\e[32mLambda Success!\e[39m Completed in 13.95ms, billed for 100ms @ 256 MB\r\n\r\n\r\n\U0001F3CE️   Performance Test Started!\r\n"
  - delay: 270
    content: "\e[32mLambda Success!\e[39m Completed in 58.77ms, billed for 100ms @ 256 MB\r\n"
  - delay: 229
    content: "\e[32mLambda Success!\e[39m Completed in 8.02ms, billed for 100ms @ 256 MB\r\n\r\n------------------------------------------------\r\n\r\n"
  - delay: 333
    content: "\U0001F40F  Updated RAM to 320 MB\r\n\r\n\U0001F525 Running warmup tests for accurate non-cold start readings!\r\n"
  - delay: 822
    content: "\e[32mLambda Success!\e[39m Completed in 233.42ms, billed for 300ms @ 320 MB\r\n"
  - delay: 294
    content: "\e[32mLambda Success!\e[39m Completed in 15.59ms, billed for 100ms @ 320 MB\r\n"
  - delay: 280
    content: "\e[32mLambda Success!\e[39m Completed in 6.43ms, billed for 100ms @ 320 MB\r\n\r\n\r\n\U0001F3CE️   Performance Test Started!\r\n"
  - delay: 370
    content: "\e[32mLambda Success!\e[39m Completed in 27.79ms, billed for 100ms @ 320 MB\r\n"
  - delay: 212
    content: "\e[32mLambda Success!\e[39m Completed in 3.59ms, billed for 100ms @ 320 MB\r\n\r\n------------------------------------------------\r\n\r\n"
  - delay: 340
    content: "\U0001F40F  Updated RAM to 384 MB\r\n\r\n\U0001F525 Running warmup tests for accurate non-cold start readings!\r\n"
  - delay: 960
    content: "\e[32mLambda Success!\e[39m Completed in 204.51ms, billed for 300ms @ 384 MB\r\n"
  - delay: 289
    content: "\e[32mLambda Success!\e[39m Completed in 16.08ms, billed for 100ms @ 384 MB\r\n"
  - delay: 325
    content: "\e[32mLambda Success!\e[39m Completed in 9.58ms, billed for 100ms @ 384 MB\r\n\r\n\r\n\U0001F3CE️   Performance Test Started!\r\n"
  - delay: 236
    content: "\e[32mLambda Success!\e[39m Completed in 29.83ms, billed for 100ms @ 384 MB\r\n"
  - delay: 247
    content: "\e[32mLambda Success!\e[39m Completed in 4.07ms, billed for 100ms @ 384 MB\r\n\r\n------------------------------------------------\r\n\r\n"
  - delay: 297
    content: "\U0001F40F  Updated RAM to 448 MB\r\n\r\n\U0001F525 Running warmup tests for accurate non-cold start readings!\r\n"
  - delay: 858
    content: "\e[32mLambda Success!\e[39m Completed in 161.08ms, billed for 200ms @ 448 MB\r\n"
  - delay: 217
    content: "\e[32mLambda Success!\e[39m Completed in 11.56ms, billed for 100ms @ 448 MB\r\n"
  - delay: 368
    content: "\e[32mLambda Success!\e[39m Completed in 12.07ms, billed for 100ms @ 448 MB\r\n\r\n\r\n\U0001F3CE️   Performance Test Started!\r\n"
  - delay: 372
    content: "\e[32mLambda Success!\e[39m Completed in 23.14ms, billed for 100ms @ 448 MB\r\n"
  - delay: 272
    content: "\e[32mLambda Success!\e[39m Completed in 8.73ms, billed for 100ms @ 448 MB\r\n\r\n------------------------------------------------\r\n\r\n"
  - delay: 258
    content: "\U0001F40F  Updated RAM to 384 MB\r\n"
  - delay: 353
    content: "\r\n\e[37mCost analysis based on 500000 requests\e[39m\r\n┌─────────┬──────────────────┬─────────────────────────────┬──────────┬──────────────┐\r\n│ (index) │ Memory Size (mb) │ Avg. Billable Duration (ms) │ Cost ($) │ Raw Cost ($) │\r\n├─────────┼──────────────────┼─────────────────────────────┼──────────┼──────────────┤\r\n│    0    │       \e[33m128\e[39m        │             \e[33m200\e[39m             │   \e[33m0.21\e[39m   │  \e[33m0.20833375\e[39m  │\r\n│    1    │       \e[33m256\e[39m        │             \e[33m100\e[39m             │   \e[33m0.21\e[39m   │  \e[33m0.20833375\e[39m  │\r\n│    2    │       \e[33m320\e[39m        │             \e[33m100\e[39m             │   \e[33m0.26\e[39m   │ \e[33m0.260417188\e[39m  │\r\n│    3    │       \e[33m384\e[39m        │             \e[33m100\e[39m             │   \e[33m0.31\e[39m   │ \e[33m0.312500625\e[39m  │\r\n│    4    │       \e[33m448\e[39m        │             \e[33m100\e[39m             │   \e[33m0.36\e[39m   │ \e[33m0.364584063\e[39m  │\r\n└─────────┴──────────────────┴─────────────────────────────┴──────────┴──────────────┘\r\n"
  - delay: 4000
    content: "\r\n"
